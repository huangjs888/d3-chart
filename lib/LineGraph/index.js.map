{"version":3,"sources":["../../src/LineGraph/index.js"],"names":["lineLabel","onlyOneMerge","tooptip","dx","totalWidth","rootSelection$","select","selectAll","each","d","i","g","d3","attr","data","line","slice","reverse","join","enter","append","group","width","util","measureSvgText","label","fontSize","isHide","filter$","findIndex","f","key","insert","color","text","scale","y","width$","update","showData","differenceWith","a","b","tipCompute","prevRes","point","scaleAxis","ok","scaleOpt","cross","average","crossX","indexOf","crossY","xScale","x","x2Scale","x2","yScale","y2Scale","y2","x0","y0","xyValue","fData","forEach","xxKey","xxScale","length","yyKey","xval","invert","yval","findNearIndex","map","xi0","xi1","xval0","xval1","valRate","xi","Math","abs","value","push","yyScale","yi0","yi1","yval0","yval1","yi","prevValue","result","selection","html","format","unit","updateLine","curve","curveLinear","smooth","curveBasis","curveBundle","line$","LineGraph","restOptions","restData","xy","restLine","compute","res","args","call","zooming$$","zooming$","e","on","destroyed","datum","target","index","splice","rendered","render","computeDomain","needDomain","lineData","domains","rd","dc","Object","keys","k","extent","BaseChart"],"mappings":"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","sourcesContent":["/*\n * @Author: Huangjs\n * @Date: 2021-03-17 16:23:00\n * @LastEditors: Huangjs\n * @LastEditTime: 2021-12-08 17:11:33\n * @Description: 默认LineGraph构造器\n */\n\nimport * as d3 from 'd3';\nimport BaseChart from '../BaseChart';\nimport * as util from '../util';\n\nfunction lineLabel() {\n  const { onlyOneMerge } = this.tooptip;\n  const dx = onlyOneMerge ? 0 : 20;\n  let totalWidth = 0;\n  this.rootSelection$\n    .select('.zLabel')\n    .selectAll('g.line-legend')\n    .each((d, i, g) => {\n      totalWidth += +d3.select(g[i]).select('rect').attr('width');\n    })\n    .data(this.data.line.slice().reverse())\n    .join(\n      (enter) => {\n        return enter\n          .append('g')\n          .attr('class', 'line-legend')\n          .attr('transform', (d, i, g) => {\n            const group = d3.select(g[i]);\n            const width = util.measureSvgText(d.label, this.fontSize) + dx + 10;\n            const isHide = this.filter$.findIndex((f) => f.key === d.key) !== -1;\n            group\n              .insert('rect')\n              .attr('x', -2)\n              .attr('y', -2)\n              .attr('width', width)\n              .attr('height', 20)\n              .attr('fill', 'transparent');\n            if (!onlyOneMerge) {\n              group\n                .insert('path')\n                .attr('fill', 'none')\n                .attr('stroke', isHide ? '#aaaa' : d.color || 'inherit')\n                .attr('stroke-width', 4)\n                .attr('transform', `translate(0,${-this.fontSize / 2}),scale(0.5)`)\n                // .attr('d', 'M0 6 C4 0,8 0,12 6 S20 12,24 6') // 曲线\n                .attr('d', 'M0 6,28 6');\n            }\n            group\n              .insert('text')\n              .attr('dx', dx)\n              .attr('fill', isHide ? '#aaaa' : 'currentColor')\n              .attr('text-anchor', 'start')\n              .attr('stroke-width', 0.5)\n              .text(d.label);\n            totalWidth = this.scale.y ? -totalWidth - width : totalWidth + 10;\n            if (onlyOneMerge) {\n              totalWidth = (this.width$ - width + 10) / 2;\n            }\n            return `translate(${totalWidth},0)`;\n          });\n      },\n      (update) => {\n        return update.each((d, i, g) => {\n          const group = d3.select(g[i]);\n          const isHide = this.filter$.findIndex((f) => f.key === d.key) !== -1;\n          group.select('path').attr('stroke', isHide ? '#aaaa' : d.color || 'inherit');\n          group\n            .select('text')\n            .attr('fill', isHide ? '#aaaa' : 'currentColor')\n            .text(d.label);\n        });\n      }\n    );\n  const showData = util.differenceWith(this.data.line, this.filter$, (a, b) => a.key === b.key);\n  this.rootSelection$\n    .select('.zAxis')\n    .selectAll('path')\n    .data(showData)\n    .join('path')\n    .attr('stroke', (d) => d.color || 'inherit')\n    .attr('stroke-width', 1.2);\n}\n\nfunction tipCompute(prevRes, point, scaleAxis) {\n  const ok = (a) => a === 0 || !!a;\n  const scaleOpt = this.scale;\n  const { cross, average, onlyOneMerge } = this.tooptip;\n  const crossX = cross.indexOf('x') !== -1;\n  const crossY = cross.indexOf('y') !== -1;\n  const xScale = scaleAxis.x && scaleAxis.x.scale;\n  const x2Scale = scaleAxis.x2 && scaleAxis.x2.scale;\n  const yScale = scaleAxis.y && scaleAxis.y.scale;\n  const y2Scale = scaleAxis.y2 && scaleAxis.y2.scale;\n  let [x0, y0] = point;\n  const xyValue = [];\n  const fData = util.differenceWith(this.data.line, this.filter$, (a, b) => a.key === b.key);\n  if (crossX) {\n    fData.forEach(({ data, color, label }) => {\n      let xxKey = 'x';\n      let xxScale = xScale;\n      if (x2Scale && data.length > 0 && ok(data.x2)) {\n        xxKey = 'x2';\n        xxScale = x2Scale;\n      }\n      const yyKey = y2Scale && data.length > 0 && ok(data[0].y2) ? 'y2' : 'y';\n      let xval = xxScale.invert(x0);\n      let yval = null;\n      const [xi0, xi1] = util.findNearIndex(\n        +xval,\n        data.map((d) => d[xxKey])\n      );\n      if (xi0 >= 0 && xi1 >= 0) {\n        const xval0 = !data[xi0] ? 0 : data[xi0][xxKey];\n        const xval1 = !data[xi1] ? 0 : data[xi1][xxKey];\n        if (xval0 === xval1) {\n          // 正好移动到了数据点上\n          yval = !data[xi0] ? 0 : data[xi0][yyKey];\n        } else if (average) {\n          // 平均值显示\n          const valRate = (xval - xval0) / (xval1 - xval0);\n          yval =\n            valRate * ((!data[xi1] ? 0 : data[xi1][yyKey]) - (!data[xi0] ? 0 : data[xi0][yyKey])) +\n            (!data[xi0] ? 0 : data[xi0][yyKey]);\n        } else {\n          // 最近值显示\n          const xi = Math.abs(xval - xval0) > Math.abs(xval - xval1) ? xi1 : xi0;\n          xval = !data[xi] ? 0 : data[xi][xxKey];\n          yval = !data[xi] ? 0 : data[xi][yyKey];\n          x0 = xxScale(xval);\n        }\n        xyValue[0] = { ...scaleOpt[xxKey], value: xval };\n        xyValue.push({\n          ...scaleOpt[yyKey],\n          value: yval,\n          color,\n          ...(onlyOneMerge ? {} : { label }),\n        });\n      }\n    });\n  } else if (crossY) {\n    fData.forEach(({ data, color, label }) => {\n      let yyKey = 'y';\n      let yyScale = yScale;\n      if (y2Scale && data.length > 0 && ok(data.y2)) {\n        yyKey = 'y2';\n        yyScale = y2Scale;\n      }\n      const xxKey = x2Scale && data.length > 0 && ok(data[0].x2) ? 'x2' : 'x';\n      let yval = yyScale.invert(y0);\n      let xval = null;\n      const [yi0, yi1] = util.findNearIndex(\n        +yval,\n        data.map((d) => d[yyKey])\n      );\n      if (yi0 >= 0 && yi1 >= 0) {\n        const yval0 = !data[yi0] ? 0 : data[yi0][yyKey];\n        const yval1 = !data[yi1] ? 0 : data[yi1][yyKey];\n        if (yval0 === yval1) {\n          // 正好移动到了数据点上\n          xval = !data[yi0] ? 0 : data[yi0][xxKey];\n        } else if (average) {\n          // 平均值显示\n          const valRate = (yval - yval0) / (yval1 - yval0);\n          xval =\n            valRate * ((!data[yi1] ? 0 : data[yi1][xxKey]) - (!data[yi0] ? 0 : data[yi0][xxKey])) +\n            (!data[yi0] ? 0 : data[yi0][xxKey]);\n        } else {\n          // 最近值显示\n          const yi = Math.abs(yval - yval0) > Math.abs(yval - yval1) ? yi1 : yi0;\n          yval = !data[yi] ? 0 : data[yi][yyKey];\n          xval = !data[yi] ? 0 : data[yi][xxKey];\n          y0 = yyScale(yval);\n        }\n        xyValue[0] = { ...scaleOpt[yyKey], value: yval };\n        xyValue.push({\n          ...scaleOpt[xxKey],\n          value: xval,\n          color,\n          ...(onlyOneMerge ? {} : { label }),\n        });\n      }\n    });\n  }\n  if (xyValue.length > 0) {\n    // 去掉第一个因为第一个是标题\n    const prevValue = (prevRes.data || []).slice(1);\n    const data = [...xyValue, ...prevValue];\n    const result = (selection) => {\n      selection\n        .selectAll('div')\n        .data(data)\n        .join('div')\n        .attr('style', 'white-space: nowrap;')\n        .html((d, i) =>\n          i === 0\n            ? `${d.label}：${d.format(d.value)}${d.unit}`\n            : `${\n                onlyOneMerge || !d.color\n                  ? ''\n                  : `<span style=\"background: ${d.color}; width: 8px; height: 8px; border-radius: 50%; display: inline-block; margin-right: 8px;\"></span>`\n              }<span>${d.label}</span>: <span style=\"display: inline-block; ${\n                onlyOneMerge || !d.color ? '' : 'margin-left: 30px;'\n              }\">${d.format(d.value)}${d.unit}</span>`\n        );\n    };\n    return { x0, y0, data, result };\n  }\n  return { ...prevRes };\n}\n\nfunction updateLine() {\n  let curve = d3.curveLinear; // 折线\n  if (this.smooth >= 1) {\n    curve = d3.curveBasis; // 平滑曲线\n  } else if (this.smooth < 1 && this.smooth > 0) {\n    // @ts-ignore\n    curve = d3.curveBundle(this.smooth); // 平滑度为0.8曲线\n  }\n  this.line$.curve(curve);\n}\n\nclass LineGraph extends BaseChart {\n  constructor(...params) {\n    const { smooth, data, tooptip, ...restOptions } = params[0] || {};\n    const { line, ...restData } = data || {};\n    super({\n      ...restOptions,\n      data: {\n        line: (line || []).map(({ data: xy, ...restLine }) => ({\n          data: xy || [],\n          ...restLine,\n        })),\n        ...restData,\n      },\n      tooptip: !tooptip\n        ? false\n        : {\n            cross: 'x',\n            ...tooptip,\n            compute: (res, ...args) => {\n              let result = tipCompute.call(this, res, ...args);\n              if (typeof tooptip.compute === 'function') {\n                result = tooptip.compute.call(this, result, ...args);\n              }\n              return result;\n            },\n          },\n    });\n    this.smooth = smooth || 0;\n    this.line$ = d3.line();\n    updateLine.call(this);\n    this.filter$ = [];\n    const zooming$$ = this.zooming$;\n    this.zooming$ = (e, ...args) => {\n      zooming$$.call(null, e, ...args);\n      const { scaleAxis } = e;\n      const xScale = (scaleAxis.x || scaleAxis.x2).scale;\n      const x2Scale = (scaleAxis.x2 || scaleAxis.x).scale;\n      const yScale = (scaleAxis.y || scaleAxis.y2).scale;\n      const y2Scale = (scaleAxis.y2 || scaleAxis.y).scale;\n      this.rootSelection$\n        .select('.zAxis')\n        // .selectChildren() // ie11及以下不支持SVGSVGElement.children（其实可以SVGSVGElement.childNodes，但是d3未做兼容）\n        .selectAll('path')\n        .attr('d', (d) =>\n          this.line$\n            // @ts-ignore\n            .x(({ x, x2 }) => (typeof x === 'undefined' ? x2Scale(x2 || 0) : xScale(x || 0)))\n            // @ts-ignore\n            .y(({ y, y2 }) => (typeof y === 'undefined' ? y2Scale(y2 || 0) : yScale(y || 0)))(d.data)\n        );\n    };\n    this.rootSelection$.select('.zLabel').on('click', (e) => {\n      if (this.destroyed) return;\n      const datum = d3.select(e.target).datum();\n      const index = this.filter$.findIndex((f) => f.key === datum.key);\n      if (index === -1) {\n        this.filter$.push(datum);\n      } else {\n        this.filter$.splice(index, 1);\n      }\n      lineLabel.call(this);\n      if (this.rendered) {\n        this.render();\n      }\n    });\n    lineLabel.call(this);\n  }\n\n  setData(data, render, computeDomain) {\n    if (!data) return this;\n    const { line, ...restData } = data;\n    super.setData(\n      {\n        line: (line || []).map(({ data: xy, ...restLine }) => ({\n          data: xy || [],\n          ...restLine,\n        })),\n        ...restData,\n      },\n      false,\n      !line\n        ? computeDomain\n        : ({ line: lineData }, needDomain) => {\n            const domains = {};\n            lineData.forEach((rd) => {\n              const xy = {};\n              rd.data.forEach((dc) => {\n                Object.keys(dc).forEach((k) => {\n                  if (!xy[k]) xy[k] = [];\n                  xy[k].push(dc[k]);\n                });\n              });\n              needDomain.forEach((key) => {\n                if (xy[key] && xy[key].length > 0) {\n                  domains[key] = d3.extent([...xy[key], ...(domains[key] || [])]);\n                }\n              });\n            });\n            return domains;\n          }\n    );\n    if (this.data.line.length !== 1) {\n      this.tooptip.onlyOneMerge = false;\n    }\n    lineLabel.call(this);\n    if (render) {\n      this.render();\n    }\n    return this;\n  }\n\n  setSmooth(smooth, render) {\n    this.smooth = smooth;\n    this.rendered = false;\n    updateLine.call(this);\n    if (render) {\n      this.render();\n    }\n    return this;\n  }\n\n  destroy() {\n    if (this.line$) this.line$ = null;\n    if (this.filter$) this.filter$ = [];\n    super.destroy();\n    return this;\n  }\n}\n\nexport default LineGraph;\n"],"file":"index.js"}